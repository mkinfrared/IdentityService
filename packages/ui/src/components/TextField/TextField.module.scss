@import "../../styles/common";

.TextField {
  display: block;
  width: 100%;

  &.disabled {

    .label {
      color: var(--grey);
      cursor: default;
    }

    .input {
      border-color: var(--grey);

      input {
        color: var(--grey);
      }
    }
  }

  &.hasError {

    .input {
      border-color: var(--red);
      box-shadow: 0 0 0.5rem 0 rgba(var(--redRgb), 0.8);
    }
  }

  &.hasSuffix {

    .input {
      padding-right: 3rem;
    }
  }

  &.hasPrefix {

    .input {
      padding-left: 3rem;
    }
  }

  .label {
    cursor: pointer;
    margin-bottom: 1rem;
    text-transform: capitalize;
  }

  .input {
    border: 1px solid transparent;
    border-radius: 1rem;
    font-family: Roboto, sans-serif;
    font-size: var(--text-size);
    font-style: normal;
    font-weight: 500;
    line-height: 1.8;
    overflow: hidden;
    position: relative;
    width: 100%;

    @include theme("dark") {
      @include dark;

      color: var(--white);
    }

    @include theme("light") {
      @include light;

      color: var(--black);
    }

    input {
      background-color: transparent;
      border: none;
      caret-color: var(--orange);
      font-size: 100%;
      height: 100%;
      padding: 1.5rem 2rem;
      width: 100%;

      @include theme("dark") {
        color: var(--white);
      }

      @include theme("light") {
        color: var(--black);
      }

      &:-webkit-autofill,
      &:-webkit-autofill:active,
      &:-webkit-autofill:hover,
      &:-webkit-autofill:focus {
        background-color: var(--background-color);
        border: none;
        -webkit-box-shadow: 0 0 0 1000px var(--background-color) inset;
        caret-color: var(--orange);
        font-size: 100%;
        -webkit-text-fill-color: var(--white);
        // it's not possible to use transparent background color
        // to override chrome autofill styles, so background needs
        // to be set to a certain color, to keep the initial background
        // transparent the transition delay can be used
        transition: background-color 7200s ease-in-out 0s; // 2 hr delay
      }

      &::selection {
        background-color: var(--cyan);
        color: var(--white);
      }

      &:focus-visible {
        outline: none;
      }
    }

    .prefix,
    .suffix {
      aspect-ratio: 1/1;
      height: calc(var(--text-size) * 1.5);
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      width: calc(var(--text-size) * 1.5);

      svg {
        fill: currentColor;
        height: 100%;
        width: 100%;
      }
    }

    .prefix {
      left: 1rem;
    }

    .suffix {
      cursor: pointer;
      right: 1rem;
    }
  }

  .error {
    color: var(--red);
    font-size: 1.4rem;
    height: 2.5rem;
    margin-top: 0.5rem;
    overflow: hidden;
    padding: 0;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: 100%;
  }
}

.Story {

  > div {
    width: 40rem;
  }
}
